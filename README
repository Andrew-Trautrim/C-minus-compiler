A parser implementation for the C- programming language using JFlex and CUP..

To build the parser, type "make" in the current directory, which will 
generate an executable program called "Main".

To parse a C- file like "example.cm", type 

    "java -cp /usr/share/java/cup.jar:. Main example.cm" 

and the syntax tree will be displayed on the screen as well as any errors found within 
the input file.

To rebuild the parser, type "make clean" and type "make" again.

Additionally, the testing folder stores several different files used to test the parser
and how it responds to different errors. For example,
- 1_statements.cm: contains several different valid statements like if/else, while, return, 
and nested statements, should NOT produce any errors.
- 2_delcarations.cm: contains both valid and invalid function and variable declarations.
- 3_operations.cm: contains both valid and invalid use of binary operations.
- 4_brackets.cm: contains both valid brackets and invalid brackets, such as unmatched 
brackets, missing brackets, and missing parameters.
- 5_everything_else.cm: contains a wide variety of cases, mostly covering complex nested 
expressions.
The other files are simple valid C- files that should produce no errors.

NOTE: when running these test files they should produce no more than 3 errors each, however, 
some errors may produce multiple messages resulting in seemingly more errors which isnt the case.
