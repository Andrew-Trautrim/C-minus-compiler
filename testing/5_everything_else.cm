int main(void) {
    int a[5];
    int b[5];
    int i;


    /* function calls */
    input(a);
    i = a[0] + func1(b);
    j = func2(i * b[n - 1]);

    /* dangling else */
    if (a != b) if (a > b) i = 0; else i = 1; 

    /* nested statements */
    while (~false) {
        if (j < 100) {
            return -1;
        }
        else {
            while (j > 100) {
                j = j * (100 / i);
            }
            return a[j];
        }
    }

    return -1;
}

/* nested expressions */
int complicated_expressions(int a[], int b, int n) {
    int i;
    int j;

    if (b < 0) {
        i = 0;
        j = 0;
        while (i < n && j > 0) {
            if (~false && a[i] / 2 != 5 && n != 0 || b == -10 && ~(b - 5 < 100)) {
                j = j * (a[i]/(3- 4)-6*(b*42+-(--b)));
                a[i] = j;
            }
            i = i + 1;
        }
    }
    else {
        j = 54/(b*6/(5/(4+a[n-1])+7));
    }
    return j * j * a[n-1];
}

/* invalid declaration */
wha_-t is even happe ~ {(ning) +  he} == re;
